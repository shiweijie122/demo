回顾:
1.Linux:
	开源的操作系统、免费、服务器端
	目录、挂载点、安全性高
	pwd、ls、cd 绝对:根目录
				相对:当前目录
2.java开发环境:
  1)编译运行过程:
	1.1)编译期:.java源文件，经编译，生成.class字节码文件
	1.2)运行期:JVM加载.class并运行.class
  2)JVM:java虚拟机
		加载.class并运行.class
	JRE:java运行环境
		除了包含JVM以外还包含运行java程序所必须的环境
		JRE=JVM+java系统类库
	JDK:java开发工具包
		除了包含JRE以外还包含开发java程序所必须的命令工具
		JDK=JRE+编译、运行等命令工具
  3)配置环境变量
3.eclipse:
	IBM、开源的、免费、只需解压即可




笔记:
1.变量:存数的
  1)声明:
      int a; //声明一个整型的变量，名为a
	  int b,c,d; //声明三个整型的变量，名为b,c,d
  2)命名:
    2.1)只能包含字母、数字、_和$符，
	    并且不能以数字开头
	2.2)严格区分大小写
	2.3)不能使用关键字
	2.4)可以中文命名，但不建议
	    建议:"见名知意"，"驼峰命名法"
  3)初始化:第一次赋值
    3.1)声明的同时初始化:
	      int a = 250; //声明整型变量a并赋值为250
	3.2)先声明后初始化:
	      int a;   //声明整型变量a
		  a = 250; //给变量a赋值为250
  4)使用:
    4.1)对变量操作就是对它所存的那个数的操作
	      int a = 5;
		  int b = a+10; //取出a的值5，加10后，再赋值给b
		  System.out.println(b); //输出变量b的值15
		  System.out.println("b"); //b，双引号中的原样输出
		  a = a+10; //取出a的值5，加10后，再赋值给a
		            //在a本身基础之上增10
		  System.out.println(a); //15
	4.2)变量的操作必须与数据类型匹配
	      int a = 3.14; //编译错误，数据类型不匹配
	4.3)变量在用之前必须声明并初始化
	      System.out.println(m); //编译错误，m未声明
		  int m;
		  System.out.println(m); //编译错误，m未初始化
2.基本数据类型:
  1)int:整型，4个字节，-21个多亿到21个多亿
    1.1)整数直接量默认为int型，但不能超出范围，超范围则编译错误
	1.2)两个整数相除，结果还是整数，小数位无条件舍弃
	1.3)整数运算时若超出范围，则发生溢出，溢出是需要避免的
  2)long:长整型，8个字节，很大很大很大
    2.1)长整型直接量需在数字后加L或l
	2.2)运算时若有可能溢出，建议在第1个数字后加L
	2.3)System.currentTimeMillis()可以获取
	    自1970.1.1零时到此时此刻的毫秒数
  3)double:浮点型，8个字节，很大很大很大
    3.1)浮点数直接量默认为double型，
	    若想表示float，需在数字后加f或F
	3.2)double数据在参与运算时，有可能会出现舍入误差
	    所以精确运算场合不可使用
  4)boolean:布尔型，1个字节
    4.1)只能存储true或false
  5)char:字符型，2个字节
    5.1)采用Unicode编码格式，每个字符都对应一个码
	    表现形式是字符char，但实质上是码int
		ASCII('a'--97  'A'--65  '0'--48)
	5.2)字符直接量必须放在单引号中，有且仅有一个
	5.3)特殊字符需通过\来转义
3.基本数据类型间的转换:
    基本类型从小到大依次为:
	  byte,short,int,long,float,double
	        char,
  1)两种方式:
    1.1)自动类型转换:从小类型到大类型
	1.2)强制类型转换:从大类型到小类型
	      语法: (要转换为的类型)变量
		       强转有可能会溢出或丢失精度
  2)两点规则:
    2.1)整数直接量可以直接赋值给byte,short,char，
	    但不能超出范围
	2.2)byte,short,char型数据参与运算时，
	    先一律转换为int再运算
4.Scanner的用法:
  1)在package下:
      import java.util.Scanner;
  2)在main()方法中:
      Scanner scan = new Scanner(System.in);
  3)在第2步之下:
      System.out.println("请输入年龄:");
      int age = scan.nextInt();
      System.out.println("请输入单价:");
	  double price = scan.nextDouble();
练习:
1.变量(1组)、基本数据类型(2组)、基本类型转换(1组)
2.创建day03的包:
  2.1)创建AgeRange类，要求:
        接收用户输入的年龄age，并输出
  2.2)创建LeapYear类，要求:
        接收用户输入的年份year，并输出
  2.3)创建ScoreLevel类，要求:
        接收用户输入的成绩score，并输出
  2.4)创建CommandBySwitch类，要求:
        接收用户输入的命令command，并输出
  2.5)创建Cashier类，要求:
        完成课后作业第13题
课后作业:第7、11、12题不用写














  int age = 37;





给变量赋值:
1)赋一个固定的值:
    int a = 5;
2)接收用户输入的值:--------Scanner
    int a = ?;
3)系统随机生成一个值:------后天讲
    int a = ?;
















'0'--48
'1'--49
'2'--50


byte,short,int,long,float,double,char














299元，打88折
double money = 299.0;
money = money*0.88;---------263












char c2 = 97;
System.out.println(c2); //a












char ch = '';













char ch = '\\';
System.out.println(ch); //\












'a'

Unicode编码格式-------固定16位
每个字符(char)都对应一个码(int)
0到65535
ASCII-----('a'--97  'A'--65  '0'--48)




0----------数字0(0)
'0'--------字符0(48)






一个字符






char字符    int码
敌----------1234
军----------2234
来----------3234
袭----------4234














潜伏--------


1234  8957  4587  9651----------int
晚     上    撤    离-----------char












男
女














14937063 18186
14937063 31483









-2147483648-------------+1
-2147483647-------------+1+1
-2147483646-------------+1+2

倒到0，再加正，超了又到负，再倒0







DataTypeDemo






精确运算场合，不能使用

BigInteger
BigDecimal


财务ERP


10000/18
10000/20
10000/25








舍入误差

double a=3.0,b=2.9;
System.out.println(a-b); //0.100000000000009
                         //0.1

double a=6.0,b=4.9;
System.out.println(a-b); //1.099999999999996
                         //1.1











十进制:
1/2------------0.5
1/3------------0.33333333333333...
2/3------------0.66666666666666...


二进制:






















1970

366*24*60*60*1000-----31622400000









long a = 1000000000*2*10L;
System.out.println(a); //200亿

long b = 1000000000*3*10L;
System.out.println(b); //不是300亿

long e = 1000000000L*3*10;
System.out.println(e); //300亿








-9223372036854775808
到
9223372036854775807
10000000000000000000

BigInteger------------无穷大









//直接量超范围为编译错误
//运算时超范围为溢出

int a = 10000000000;   //编译错误
int b = 1000000000*10; //溢出















int balance = 2147483647;
balance = balance+1; //-2147483648

















1G=1024M(兆)
1M=1024KB(千字节)
1KB=1024B(字节)
1B=8Bit(位)

1G=1024*1024*1024----1073741824字节












不同的类型所占用的内存空间是不同的
------------数据类型够用就行

int(4个字节)---------(-21个多亿到21个多亿)
long(8个字节)--------(很大很大很大)
double(8个字节)------(很大很大很大)
char(2个字节)
boolean(1个字节)

年龄---------------int,long,double














java语言中为什么要设计那么多种类型，
来分别存储不同的东西?

为什么不设计一种类型，这种类型什么都能装?


面积上的差异-----所占空间的大小不同

别墅
四居室
三居室
两居室
一居室
开间
地下室

















VarDemo


如何能够相对轻松的度过这4个月?
1)课上认真听
2)不要听热闹
3)听的同时尽量多的记住东西










int a;        //不直观
int 年龄;     //直观但不专业
int nianLing; //既不直观也不专业
int age;      //直观且专业，"见名知意"

int score,myScore,myJavaScore; //驼峰命名法
int Score,MyScore,MyJavaScore; //帕斯卡命名法













HelloWorld










                        twoAbcMnq
erJuanBianYaQi---------二卷变压器











a
b
c
d
e
f
g












早期的计算机--------算数(数字)
现在的计算机--------算数(数字、文字、图片、音频、视频等)

www.taobao.com-------------一个数据
淘宝首页-------------------一堆数据
手机壳---------------------一个数据
一堆手机壳-----------------一堆数据
详细页面-------------------一堆数据
购物车---------------------一堆数据
结算-----------------------一堆数据

















当前在/opt/jdk下，想转到/opt/eclipse下:
绝对:	cd /opt/eclipse
相对:	cd ../eclipse-------/opt/eclipse




Linux操作方式分两种:
1)不带图形界面的-------真正的服务器系统
2)带图形界面的



Linux下运行程序，只需写出程序的完整路径即可

/home/soft01/tts9/eclipse/eclipse

假设当前在/home/soft01/tts9/eclipse

./eclipse










