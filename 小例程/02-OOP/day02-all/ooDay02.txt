回顾:
1.什么是类？什么是对象？
2.如何创建类？如何创建对象？如何访问成员？
3.引用类型之间画等号:指向同一个对象，影响
4.null:空，没有指向任何对象
       若引用值为null，则该引用不能再进行任何操作了
	   若操作则NullPointerException空指针异常



笔记:
0.方法的签名:方法名+参数列表
1.方法的重载(Overload):
  1)发生在一个类中，方法名称相同，参数列表不同
  2)编译器在编译时自动根据方法的签名绑定调用的方法
2.构造方法:
  1)常常用于给成员变量赋初值
  2)与类同名，没有返回值类型
  3)在创建(new)对象时被自动调用
  4)若自己不写构造，则编译器默认一个无参构造
    若自己写了构造，则不再默认提供
  5)构造方法可以重载
3.this:指代当前对象，哪个对象调方法指的就是哪个对象
       只能用在方法中，方法中访问成员变量之前默认有个this.
  this的用法:
  1)this.成员变量名-------访问成员变量
  2)this.方法名()---------调用方法
  3)this()----------------调用构造方法
4.引用类型数组:
  1)Cell[] cells = new Cell[4];
    cells[0] = new Cell(2,5);
	cells[1] = new Cell(2,6);
	cells[2] = new Cell(2,7);
	cells[3] = new Cell(3,6);
  2)Cell[] cells = new Cell[]{
      new Cell(2,5),
	  new Cell(2,6),
	  new Cell(2,7),
	  new Cell(3,6)
    };
  3)int[][] arr = new int[3][];
    arr[0] = new int[2];
	arr[1] = new int[3];
	arr[2] = new int[2];
	arr[1][0] = 100; //给arr中第2个元素中的第1个元素赋值为100
  4)int[][] arr = new int[3][4]; //3行4列
    for(int i=0;i<arr.length;i++){
	  for(int j=0;j<arr[i].length;j++){
	    arr[i][j] = 100;
	  }
	}





练习:-------------oo.day03包中
1)完成Cell类:
2)完成T类:
3)完成J类:
4)完成O类:
5)完成?类:
6)完成TJTest类:









int[] arr = new int[3];
arr[0] = 5;

Cell[] cells = new Cell[4];
cells[0] = new Cell(2,5);

int[][] arr = new int[3][];
arr[0] = new int[2];









1)找对象:一堆T,J,L,O,I,S,Z的图形对象
2)抽类:T,J,L,O,I,S,Z类
3)设计类中的成员变量和方法
4)创建对象并测试

T t1 = new T(); //00,01,02,11
T t2 = new T(); //00,01,02,11
T t3 = new T(); //00,01,02,11


T t1 = new T(2,5); //25,26,27,36
T t2 = new T(1,4); //14,15,16,25
T t3 = new T(0,0); //00,01,02,11
T t4 = new T();    //00,01,02,11


class T{ //T型
  Cell[] cells;
  T(){
    this(0,0);
  }
  T(int row,int col){
    cells = new Cell[4];
    cells[0] = new Cell(row,col);
	cells[1] = new Cell(row,col+1);
	cells[2] = new Cell(row,col+2);
	cells[3] = new Cell(row+1,col+1);
  }

  void drop(){
    for(int i=0;i<cells.length;i++){
	  cells[i].row++;
	}
  }
  void moveLeft(){
    for(int i=0;i<cells.length;i++){
	  cells[i].col--;
	}
  }
  void moveRight(){
    for(int i=0;i<cells.length;i++){
	  cells[i].col++;
	}
  }
  void print(){ //输出四个格子的行号和列号
    for(int i=0;i<cells.length;i++){
	  String str = cells[i].getCellInfo();
	  System.out.println(str);
	}
  }

}













class J{
  Cell[] cells;
  J(){
    this(0,0);
  }
  J(int row,int col){
    cells = new Cell[4];
	cells[0] = new Cell(row,col);
	cells[0] = new Cell(row+1,col);
	cells[0] = new Cell(row+2,col-1);
	cells[0] = new Cell(row+2,col);
  }

  void drop(){
    for(int i=0;i<cells.length;i++){
	  cells[i].row++;
	}
  }
  void moveLeft(){
    for(int i=0;i<cells.length;i++){
	  cells[i].col--;
	}
  }
  void moveRight(){
    for(int i=0;i<cells.length;i++){
	  cells[i].col++;
	}
  }
  void print(){ //输出四个格子的行号和列号
    for(int i=0;i<cells.length;i++){
	  String str = cells[i].getCellInfo();
	  System.out.println(str);
	}
  }
}


















class J{
}
class L{
}
class O{
}
class I{
}
class S{
}
class Z{
}











RefArrayDemo


















--------------------------数组的数组
//3为arr的长度
//4为arr中每个元素的长度
int[][] arr = new int[3][4]; //3行4列
for(int i=0;i<arr.length;i++){ //行
  for(int j=0;j<arr[i].length;j++){ //列
    arr[i][j] = 100;
  }
}







i=0
  j=0 arr00
  j=1 arr01
  j=2 arr02
  j=3 arr03
i=1
  j=0 arr10
  j=1 arr11
  j=2 arr12
  j=3 arr13








int  [] arr   = new int[3];
Cell [] cells = new Cell[4];




//声明double[]型数组，包含10个元素
//每个元素都是double[]型，默认值为null
double[][] dous = new double[10][];















//声明int型数组arr，包含3个元素
//每个元素都是int型，默认值为0
int[] arr   = new int[3];


//声明int[]型数组arr，包含3个元素
//每个元素都是int[]型，默认值为null
int[][] arr = new int[3][];
arr[0] = new int[2];
arr[1] = new int[3];
arr[2] = new int[2];
//给arr中第2个元素中的第1个元素赋值为100
arr[1][0] = 100;

arr-------------------int[][]
arr[0]----------------int[]
arr[0][0]-------------int










int[] arr = new int[]{
  2,
  6,
  8
};

Cell[] cells = new Cell[]{
  new Cell(2,5),
  new Cell(2,6),
  new Cell(2,7),
  new Cell(3,6)
};









int[] arr= new int[4];
arr[0] = 5;
int  a = 

Cell[] cells = new Cell[4]; //创建Cell数组对象
cells[0] = new Cell(2,5); //创建Cell对象
cells[1] = new Cell(2,6);
cells[2] = new Cell(2,7);
cells[3] = new Cell(3,6);
















//声明整型数组arr，包含4个元素
//每个元素都是int型，默认值为0
int[]  arr   = new int[4];

//声明Cell型数组cells，包含4个元素
//每个元素都是Cell型，默认值为null
Cell[] cells = new Cell[4];
//声明Student数组stus，包含26个元素
//每个元素都是Student型，默认值为null
Student[] stus = new Student[26];













Cell c1 = new Cell();    //0,0
Cell c2 = new Cell(3);   //3,3
Cell c3 = new Cell(2,5); //2,5

class Cell{
  int row;
  int col;

  Cell(){
    this(0);
  }
  Cell(int n){
    this(n,n);
  }
  Cell(int row,int col){
    this.row = row;
	this.col = col;
  }

}













Cell c = new Cell();
c.row = 2;
c.col = 5;

Cell c = new Cell(2,5);
Cell cc = new Cell(1,4);

class Cell{
  int row;
  int col;
  Cell(int row,int col){
    this.row = row; //cc.row=1;
	this.col = col; //cc.col=4;
  }
}













数字、_、$---------都是在特殊情况下才使用的













Cell c = new Cell();
c.row = 2;
c.col = 5;
c.drop();
c.moveLeft(3);
String str = c.getCellInfo();

Cell cc = new Cell();
cc.row = 1;
cc.col = 4;
cc.drop();
cc.moveLeft(2);
String str = cc.getCellInfo();


class Cell{
  int row;
  int col;
  void drop(){
    this.row++; //cc.row++;------2
  }
  void moveLeft(int n){
    this.col-=n; //cc.col-=2;----2
  }
  String getCellInfo(){
    return this.row+","+this.col; //cc.row+","+cc.col----2,2
  }
}
















Cell c1 = new Cell();
Cell c2 = new Cell(2,5);

class Cell{
  int row;
  int col;
  Cell(){
  }
  Cell(int row1,int col1){
    row = row1;
	col = col1;
  }
}













Cell c1 = new Cell(2,5);
Cell c2 = new Cell(); //编译错误

class Cell{
  int row;
  int col;
  Cell(int row1,int col1){
    row = row1;
	col = col1;
  }
}

Cell c = new Cell();
c.row = 2;
c.col = 5;















Student zs = new Student("zhangsan",25,"廊坊");
Student ls = new Student("lisi",26,"佳木斯");

Student ww = new Student();

class Student{
  String name;
  int age;
  String address;
  Student(){
  }
  //给成员变量赋初值
  Student(String name1,int age1,String address1){
    name = name1;
	age = age1;
	address = address1;
  }
}



//1.创建学生对象并给成员变量赋默认值
//2.调用学生类的构造方法
Student zs = new Student();




Student zs = new Student();
zs.setInfo("zhangsan",25,"廊坊");

Student ls = new Student();
ls.setInfo("lisi",26,"佳木斯");





Student zs = new Student();
zs.name = "zhangsan";
zs.age = 25;
zs.address = "河北廊坊";

Student ls = new Student();
ls.name = "lisi";
ls.age = 26;
ls.address = "黑龙江佳木斯";

























void println(){
}
void println(int a){
}
void println(double b){
}
void println(char c){
}
void println(boolean d){
}
void println(String e){
}


System.out.println();
System.out.println(2);
System.out.println(43.6);
System.out.println('你');
System.out.println(true);
System.out.println("Hello");













Cell c = new Cell();
c.row = 2;
c.col = 5;
c.drop();
c.moveLeft(2);
String str = c.getCellInfo();

class Cell{
  int row;
  int col;
  void drop(){
    row++;
  }
  void moveLeft(int n){
    col-=n;
  }
  void moveRight(int n){
    col+=n;
  }
  String getCellInfo(){
    return row+","+col;
  }
}











